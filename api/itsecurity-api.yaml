openapi: 3.0.0
info:
  title: ITSECURITY API documentation
  version: '1.0'
  description: ITSECURITY API
tags:
  - name: auth
  - name: user
  - name: comment
  - name: caff
paths:
  /api/auth/login:
    post:
      summary: ''
      tags:
        - auth
      operationId: login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDTO'
        '401':
          description: Unauthorized
        '403':
          description: User banned
        '500':
          description: Created
      description: Login to the application with username and password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDTO'
      parameters: []
  '/api/auth/passwordset/{userId}':
    put:
      summary: ''
      tags:
        - auth
      operationId: set-password-for-user
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Setting password for user by admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeDTO'
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
  /api/auth/token:
    post:
      summary: ''
      tags:
        - auth
      operationId: get-access-token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokensDTO'
        '400':
          description: Not Implemented
        '403':
          description: User banned
        '500':
          description: Internal Server Error
      description: Get access token with refresh token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenDTO'
  /api/auth/me/changepassword:
    post:
      summary: ''
      tags:
        - auth
      operationId: change-password
      responses:
        '204':
          description: Password has been changed
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Change own password by user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeDTO'
  /api/auth/roles:
    get:
      summary: Your GET endpoint
      tags:
        - auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Not Found
      operationId: get-roles
      description: Get roles which are in application
  /api/users:
    get:
      summary: Your GET endpoint
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: get-users
      description: Get all users
    parameters: []
    post:
      summary: ''
      tags:
        - user
      operationId: create-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Not Found
      description: Create new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationDTO'
  /api/users/me:
    get:
      summary: Your GET endpoint
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: get-me
      description: Get current user profile
    put:
      summary: ''
      tags:
        - user
      operationId: update-me
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      description: Update current user profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateDTO'
  '/api/users/{userId}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-user-by-id
      description: Get user by id
    put:
      summary: ''
      tags:
        - user
      operationId: update-user-by-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Update user by id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateDTO'
  '/api/users/{userId}/ban':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    put:
      tags:
        - user
      summary: ''
      operationId: ban-user-by-id
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Ban user by id
  '/api/user/{userId}/makeadmin':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    put:
      summary: ''
      tags:
        - user
      operationId: make-user-admin
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Make user admin by id
  /api/caffs:
    get:
      summary: Your GET endpoint
      tags:
        - caff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaffSumDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: get-all-caffs
      description: Get all caff wit summarized details
    post:
      tags:
        - caff
      summary: ''
      operationId: upload-caff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaffDetailsDTO'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      description: Upload caff file
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        description: Upload .caff files in multipart form data
    parameters: []
  '/api/caffs/{caffId}':
    parameters:
      - schema:
          type: string
        name: caffId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - caff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaffDetailsDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-caff-details-by-id
      description: Get caff details by document id
    delete:
      tags:
        - caff
      summary: ''
      operationId: delete-caff-by-id
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      description: Delete caff file by id
  '/api/caffs/{caffId}/comments':
    parameters:
      - schema:
          type: string
        name: caffId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - comment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: get-comments
      description: Returns comments of the specified document.
    post:
      summary: ''
      tags:
        - comment
      operationId: post-comments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Add a comment to the specified document.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentUploadDTO'
  '/api/caffs/{caffId}/download':
    parameters:
      - schema:
          type: string
        name: caffId
        in: path
        required: true
    get:
      tags:
        - caff
      operationId: download-preview-or-caff-file
      description: Download preview image of caff or the caff file depends on query param
      parameters:
        - schema:
            type: string
            enum:
              - PREVIEW
              - CAFF
          in: query
          name: type
          required: true
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  '/api/caffs/{caffId}/buy':
    parameters:
      - schema:
          type: string
        name: caffId
        in: path
        required: true
    post:
      summary: ''
      tags:
        - caff
      operationId: buy-caff
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaffDetailsDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/comments/{commentId}':
    parameters:
      - schema:
          type: string
        name: commentId
        in: path
        required: true
    delete:
      summary: ''
      tags:
        - comment
      operationId: delete-comment
      responses:
        '204':
          description: No content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      summary: ''
      tags:
        - comment
      operationId: put-comment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentUploadDTO'
components:
  schemas:
    PasswordChangeDTO:
      title: PasswordChangeDTO
      type: object
      properties:
        newPassword:
          type: string
        currentPassword:
          type: string
      required:
        - newPassword
    LoginRequestDTO:
      title: LoginRequestDTO
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    LoginResponseDTO:
      title: LoginResponseDTO
      type: object
      properties:
        tokens:
          $ref: '#/components/schemas/TokensDTO'
        user:
          $ref: '#/components/schemas/UserDTO'
    TokensDTO:
      title: TokensDTO
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    UserDTO:
      title: UserDTO
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        role:
          type: string
          enum:
            - ADMIN
            - CUSTOMER
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    RefreshTokenDTO:
      title: RefreshTokenDTO
      type: object
      properties:
        refreshToken:
          type: string
    UserRegistrationDTO:
      title: UserRegistrationDTO
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        password:
          type: string
          pattern: '.*(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d].*'
          maxLength: 64
          minLength: 8
      required:
        - firstName
        - lastName
        - username
        - password
        - email
    UserUpdateDTO:
      title: UserUpdateDTO
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        email:
          type: string
    CaffDetailsDTO:
      title: CaffDetailsDTO
      type: object
      properties:
        id:
          type: string
        creator:
          type: string
        createdAt:
          type: string
          format: date-time
        width:
          type: string
        height:
          type: string
        duration:
          type: string
        tags:
          type: string
        caption:
          type: string
    CaffSumDTO:
      title: CaffSumDTO
      type: object
      properties:
        id:
          type: string
          description: 'ID of the document, what is represent the CAFF'
        createdAt:
          type: string
          format: date-time
        creator:
          type: string
    CommentUploadDTO:
      title: CommentUploadDTO
      type: object
      properties:
        comment:
          type: string
        dummy_not_to_use_field:
          type: string
      required:
        - comment
    CommentDTO:
      title: CommentDTO
      type: object
      properties:
        id:
          type: string
        comment:
          type: string
        user:
          $ref: '#/components/schemas/ReducedUserDTO'
        createdAt:
          type: string
          format: date-time
    ReducedUserDTO:
      title: ReducedUserDTO
      type: object
      properties:
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
servers:
  - url: 'http://localhost:8080'
    description: Debug
